// Generated by CoffeeScript 1.10.0
(function() {
  var ActionTypes, currentNote, expect;

  expect = require('chai').expect;

  currentNote = require('../../js/reducers/CurrentNote.js');

  ActionTypes = require('../../js/constants/ActionTypes');

  describe('CurrentNote reducer', function() {
    describe('initial load', function() {
      return it('should return 0', function() {
        return expect(currentNote(void 0, {})).to.equal(0);
      });
    });
    describe('unrecognized action', function() {
      return it('should return the previous value', function() {
        return expect(currentNote(42, {
          type: 'NOOP'
        })).to.equal(42);
      });
    });
    describe('NOTE_CHANGED', function() {
      return it('should return the given note id', function() {
        return expect(currentNote(42, {
          type: ActionTypes.NOTE_CHANGED,
          payload: {
            noteId: 43
          }
        })).to.equal(43);
      });
    });
    return describe('NOTE_DELETED', function() {
      describe('when the noteId is 0', function() {
        return it('should return 0', function() {
          return expect(currentNote(42, {
            type: ActionTypes.NOTE_DELETED,
            payload: {
              noteId: 0
            }
          })).to.equal(0);
        });
      });
      return describe('when the noteId is not zero', function() {
        return it('should return n-1', function() {
          return expect(currentNote(42, {
            type: ActionTypes.NOTE_DELETED,
            payload: {
              noteId: 43
            }
          })).to.equal(42);
        });
      });
    });
  });

}).call(this);
